<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sAndroidButtons</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oAndroidButtonBase</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controller
event_inherited();
image_speed = 0;
image_index = 1;
active = 0;
devNumb = -1;
half = global.guiW / 2;

xx = x;
yy = y;
dx = 0;
dy = 0;

dir = 0
len = 0;
maxD = 70;

rC = c_red;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!updatable)
    exit;
if (!active)
{
    for (var i = 0; i &lt; 5; i++)
    {
        if (device_mouse_check_button(i, mb_left) &amp;&amp; (device_mouse_x_to_gui(i) &gt; half))
        {
            if (instance_position(device_mouse_x_to_gui(i), device_mouse_y_to_gui(i), oAndroidButtonBase) == noone)
            {
                active = 1;
                devNumb = i;
                xx = device_mouse_x_to_gui(i);
                yy = device_mouse_y_to_gui(i);
                exit;
            }
        }
    }   
}
else
{
    if (device_mouse_check_button_released(devNumb, mb_left))
    {
        active = 0;
        exit;
    }
    dx = device_mouse_x_to_gui(devNumb);
    dy = device_mouse_y_to_gui(devNumb);
    dir = point_direction(xx, yy, dx, dy);
    len = min(point_distance(xx, yy, dx, dy), maxD);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buttonz
if (!active)
    exit;
draw_circle_colour(xx, yy, maxD, rC, rC, 1);
draw_sprite_ext(sAndroidButtons, image_index, xx + lengthdir_x(maxD, dir), yy + lengthdir_y(maxD, dir), 1, 1, 0, image_blend, 0.5);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
