<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oDynamicObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_speed = 0;

// Stats
hp = 6;
_hp = 12;

mousedir = 0;


ammo[AMMO.__CNT - 1] = 0; // ammo we have right now

weaponObj = instance_create(x, y, oPlayerWeapon);
weapon = WEAPONS.__NONE;
weaponType = WEAPON_TYPE.__RANGE;
weaponInf = -1;
weaponAmmo = 0;

weaponBack = WEAPONS.__NONE;
weaponBackAmmo = 0;
// weapon animation
weaponSprite[2] = -1;
weaponAnimSpeed[2] = 0;
weaponXoff = 0;
weaponYoff = 0;
weaponBlend = c_white;

state = PLAYER_STATES.__IDLE;

key[KEY.CNT] = 0;


pickupId = noone;

// movement trics
hmove = 0;
vmove = 0;


instance_create(x, y, oCamera);
instance_create(0, 0, oGameGUI);

playerSetWeapon(weapon);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///weapon update
if (!updatable)
    exit;
weaponObj.x = x + weaponXoff * sign(image_xscale);
weaponObj.y = y + weaponYoff;
if (weapon != WEAPONS.__NONE)
{
    switch (weaponType)
    {
    case WEAPON_TYPE.__MELEE:
        var perc = anAngle / anMaxAngle;
        with(weaponObj)
            image_angle = perc * anMaxAngle;
        weaponObj.image_xscale = image_xscale;
        if (mouse_y &lt; y)
        {
            weaponObj.depth = depth + 1;
        }
        else
        {
            weaponObj.depth = depth - 1;
        }
        break;
    case WEAPON_TYPE.__RANGE:
        weaponObj.image_yscale = sign(image_xscale);
        weaponObj.image_angle = mousedir;
        
        if (mousedir &gt; 0 &amp;&amp; mousedir &lt; 180)
        {
            weaponObj.depth = depth + 1;
        }   
        else
        {
            weaponObj.depth = depth - 1;
        }
        break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!updatable)
    exit;
    
depth = -y;

pickupId = noone;
hmove = 0;
vmove = 0;

switch (state)
{
case PLAYER_STATES.__IDLE:
    procedureAnimableApproachReset();
    playerRotateToMouse();
    playerGetInteractable();
    
    physicalBeginStep();
    playerGetKeys();
    if ((key[KEY.LEFT] ^^ key[KEY.RIGHT]) || (key[KEY.TOP] ^^ key[KEY.BOT]))
        playerSetState(PLAYER_STATES.__WALK);
    if (key[KEY.KICK])
    {
        var can = playerCanShoot();
        if (can)
            playerAttack();
        else
            debugWrite("Cannot shoot, reason: " + string(can));
    }   
    if (key[KEY.PICKUP])
    {
        playerPickup(pickupId);
    }
    if (key[KEY.RELOAD])
        playerReload();
    break;

case PLAYER_STATES.__WALK:
    procedureAnimableProceed();    
    playerRotateToMouse();
    playerGetInteractable();
    
    physicalBeginStep();
    playerGetKeys();
    if (key[KEY.LEFT])
    {
        hmove--;
    }
    if (key[KEY.RIGHT])
    {
        hmove++;
    }
    if (key[KEY.TOP])
    {       
        vmove--; 
    }
    if (key[KEY.BOT])
    {
        vmove++;
    }
    if ((vmove == 0 &amp;&amp; hmove == 0)
        || ((key[KEY.TOP] &amp;&amp; key[KEY.BOT]) || (key[KEY.LEFT] &amp;&amp; key[KEY.RIGHT])))
    {
        playerSetState(PLAYER_STATES.__IDLE);
        exit;
    }
    if (key[KEY.KICK])
    {
        var can = playerCanShoot();
        if (can)
            playerAttack();
        else
            debugWrite("Cannot shoot, reason: " + string(can));
    }   
        
    if (key[KEY.PICKUP])
    {
        playerPickup(pickupId);
    }
    
    hspd += spd * speedmod * hmove;
    vspd += spd * speedmod * vmove;
    physicalMove();
    break;
case PLAYER_STATES.__DIE:

    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///off pause
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///on pause

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!drawable)
    exit;
procedureAnimableDrawPerson();
playerDebug();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
