<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sShop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>oPickupableObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_speed = 0;
acttive = 1; // whether can be opened or not
opened = 0; // the window itself
depth = -y;
influence = 0;

type = PICKUP.__SHOP;
compareY = bbox_bottom;
autopickup = 0;
cmp = 1;

// content
goodsCnt = irandom_range(1, 6);
var gi = goodsCnt - 1;
goodsClass[gi] = 0;
goodsId[gi] = 0;
goodsName[gi] = 0;
goodsDesc[gi] = "";
goodsSpr[gi] = -1;
goodsImg[gi] = 0;
goodsPrice[gi] = 0;
goodsXoff[gi] = 0;
goodsYoff[gi] = 0;

// point on button buy
pir[gi] = 0;

shopInit();

// where to give objs
giveX = x;
giveY = bbox_bottom + 15;
rangeX = 50;
rangeY = 50;

// gui draw params
vw = global.guiW;
vh = global.guiH;
x1 = 85;
y1 = 90;
x2 = x1 + 1085; //vw - x1 - 25;

wh = c_white;
bl = c_black;
gr = make_colour_hsv(0, 0, 200);
cl = make_colour_hsv(199, 40, 36);

ixs = x1 + 25;
iys = y1 + 12;
iybeg = 20;
iw = 82;
ixe = ixs + iw;
iwhalf = iw / 2;
ih = iw;
ihhalf = ih / 2;
ixc = ixs + iw / 2;

y2 = iys + (ih + iybeg) * 6;

six = 25;
siy = 0;

dx = ixe + 25;
dw = 725;
dx2 = dx + dw;
dh = ih;

px = dx2 + 50;
pmx = dx2 + 50;
pmyoff = ih / 1.5;

bx = px + 50;
bx2 = bx + 100;
by1 = 5;
by2 = 75;
bxc = bx + (bx2 - bx) / 2;
byc = by1 + (by2 - by1) / 2;

cmx1 = bx2 - 190;
cmy1 = 15;
cmx2 = x2;
cmy2 = 70;

cmsx = cmx2 - 30;
cmsy = cmy1 + (cmy2 - cmy1) / 2;

// close
mocb = 0;
clx1 = cmx2 + 5; 
cly1 = cmy1;
clx2 = clx1 + sprite_get_width(sShopClose);
cly2 = cly1 + sprite_get_height(sShopClose);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!updatable) 
    exit;
var mb = mouse_check_button_pressed(mb_left)
for (var i = 0; i &lt; goodsCnt; i++)
{
    var ybeg = iys + (ih + iybeg) * i;
    pir[i] = point_in_rectangle(mouse_x - view_xview, mouse_y - view_yview, bx, ybeg + by1, bx2, ybeg + by2)
    if (pir[i])
    {
        if (mb)
            shopBuy(i);
    }
}
mocb = point_in_rectangle(mouse_x - view_xview, mouse_y - view_yview, clx1, cly1, clx2, cly2);
if (mocb)
{
    if (mb)
    {
        shopClose();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shop GUI
if (opened)
{
    // main window
    draw_set_alpha(0.5);
    draw_rectangle_colour(x1, y1, x2, y2, bl, bl, bl, bl, 0);
    draw_set_alpha(1);
    
    // icon
    //    draw_sprite_ext(sShopGUIIco, 0, six, siy, 1, 1, 0, wh, 1);
    
    // now wares
    for (var i = 0; i &lt; goodsCnt; i++)
    {
        var ybeg = iys + (ih + iybeg) * i;
        // outer white rect
        draw_rectangle_colour(ixs, ybeg, ixe, ybeg + ih, 
            wh, wh, wh, wh, 0);
        // the icon itself
        draw_sprite_ext(goodsSpr[i], goodsImg[i], ixc - goodsXoff[i], ybeg + ihhalf - goodsYoff[i], 1, 1, 0, wh, 1);
        
        // description block
        draw_rectangle_colour(dx, ybeg, dx2, ybeg + dh, 
            wh, wh, wh, wh, 0);
            
        draw_set_font(fShopCaption);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        // name of good
        draw_text_colour(dx + 5, ybeg + 0, goodsName[i], bl, bl, bl, bl, 1);
        
        draw_set_font(fShopDesc);     
        // description text
        draw_text_ext_colour(dx + 5, ybeg + 30, goodsDesc[i], 20, dw, bl, bl, bl, bl, 1);
        
        // price
        draw_set_font(fShopCaption);
        draw_set_halign(fa_center);
        draw_text_colour(px, ybeg, string(goodsPrice[i]), wh, wh, wh, wh, 1);
        draw_sprite_ext(sMoneyGUI, 0, pmx, ybeg + pmyoff, 1, 1, 0, wh, 1);
        
        // button
        var fc = gr;
        if (pir[i])
            // hover
            fc = wh;
        draw_rectangle_colour(bx, ybeg + by1, bx2, ybeg + by2, 
            fc, fc, fc, fc, 0);
        draw_sprite_ext(sShopBuy, goodsImg[i], bxc, ybeg + byc, 1, 1, 0, wh, 1);
        
    }
    
    // current money
    draw_set_alpha(0.5);
    draw_rectangle_colour(cmx1, cmy1, cmx2, cmy2, 
        bl, bl, bl, bl, 0);
    draw_set_alpha(1);
    draw_sprite_ext(sMoneyGUI, 0, cmsx, cmsy, 1, 1, 0, wh, 1);
    draw_set_font(fShopCaption);
    draw_set_halign(fa_right);
    draw_set_valign(fa_middle);
    draw_text_colour(cmsx - 30, cmsy, string(global.money), wh, wh, wh, wh, 1);
    
    draw_sprite_ext(sShopClose, 0, clx1, cly1, 1, 1, 0, wh, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///off pause
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///on pause

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
