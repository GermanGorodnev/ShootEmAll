<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level controller
image_speed = 0;

tw = LEVEL.TILE_W;
th = LEVEL.TILE_H;

minLeafSize = 12;
maxLeafSize = 18;
minRoomSize = 8;
maxRoomSize = 15;

cnt = 0;
leafs = ds_list_create();
rcnt = 0;

floorD = 100000;
carpetD = 99999;

toiletLeftoff = 5;

ww = ceil(room_width / tw);
hh = ceil(room_height / th)

// grid
level = ds_grid_create(ww, hh);
ds_grid_set_region(level, 0, 0, ww, hh, LEVEL.VOID);
// collision indicies
colLevel = ds_grid_create(ww, hh);
ds_grid_set_region(colLevel, 0, 0, ww, hh, TILES.__NONE);

// collision helper
colOffset = ds_map_create();
var arr;
arr[3] = 0;
arr[0] = 0;
arr[1] = 0;
arr[2] = 0;
ds_map_add(colOffset, TILES.__WALL, arr);

arr = 0;
arr[0] = 0;
arr[1] = 20;
arr[2] = 10;
arr[3] = 0;
ds_map_add(colOffset, TILES.__TABLE_LEFT, arr);

arr = 0;
arr[0] = 0;
arr[1] = 20;
arr[2] = 0;
arr[3] = 0;
ds_map_add(colOffset, TILES.__TABLE_HOR_CENT, arr);

arr = 0;
arr[0] = 10;
arr[1] = 20;
arr[2] = 0;
arr[3] = 0;
ds_map_add(colOffset, TILES.__TABLE_RIGHT, arr);


// NEW
cellW = 12;
cellH = 12;
cellRoomW = 10;
cellRoomH = 10;
prisonCellW = 5;
prisonCellH = 4;
// 2d array for graph
cells = ds_list_create();
cellsVis[0] = 0; //room_width div cellW * room_height div cellH

levelGenerate();

//bspGenerate();
//levelGridToTiles();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(leafs);
ds_grid_destroy(level);
ds_list_destroy(cells);
cellsVis = 0;
ds_grid_destroy(colLevel);

var first = ds_map_find_first(inventory);
for (var i = 0, sz = ds_map_size(colOffset); i &lt; sz; i++;)
{
    colOffset[? first] = 0; // clear the array
    first = ds_map_find_next(colOffset, first);
}
     
ds_map_destroy(colOffset);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
